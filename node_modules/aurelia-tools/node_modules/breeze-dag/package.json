{
  "name": "breeze-dag",
  "version": "0.1.0",
  "description": "Async flow control for directed-acyclic-graph iteration.",
  "author": {
    "name": "Jake Luer",
    "email": "jake@qualiancy.com",
    "url": "http://qualiancy.com"
  },
  "license": "MIT",
  "keywords": [],
  "repository": {
    "type": "git",
    "url": "git@github.com:qualiancy/breeze-dag.git"
  },
  "engines": {
    "node": "*"
  },
  "main": "./index",
  "scripts": {
    "test": "make test"
  },
  "dependencies": {
    "breeze-queue": "0.1.x",
    "gaia-tsort": "*"
  },
  "devDependencies": {
    "chai": "*",
    "chai-spies": "*",
    "component": "*",
    "mocha": "*",
    "mocha-phantomjs": "*"
  },
  "readme": "# breeze-dag [![Build Status](https://secure.travis-ci.org/qualiancy/breeze-dag.png?branch=master)](https://travis-ci.org/qualiancy/breeze-dag)\n\n> Async flow control for directed-acyclic-graph iteration.\n\n## Installation\n\n### Node.js\n\n`breeze-dag` is available on [npm](http://npmjs.org).\n\n    $ npm install breeze-dag\n\n### Component\n\n`breeze-dag` is available as a [component](https://github.com/component/component).\n\n    $ component install qualiancy/breeze-dag\n\n## Usage\n\n### dag (edges, concurrency, iterator[, done])\n\n* **@param** _{Array}_ edges \n* **@param** _{Number}_ concurrency \n* **@param** _{Function}_ iterator \n* **@param** _{Function}_ callback \n\nDAG, directed-acyclic-graph, is a graph of nodes in\nwhich there are no cyclic references, and therefor has\na specific starting and ending point. The `dag` async\nmethod will take an array of edges and resolve a best\nfit path of execution. It will then iterate over each\nedge in parallel up to a set amount of threads (concurrency).\nFurthermore, an edge will not begin it's processing until\nall of its dependancies have indicated successful execution.\n\nA set of edges is defined as an array, with each element being\nan array of x, y pairs, where `x` must complete before `y`\ncan begin.\n\n```js\nvar edges = [\n    [ 'a', 'b' ]\n  , [ 'a', 'c' ]\n  , [ 'd', 'e' ]\n  , [ 'b', 'd' ]\n];\n```\n\nWith the above edges, we expect `a` to start processing. Upon\ncompletion, `b` and `c` will start. Upon `b` completion, `d`\nwill execute, then `e`.\n\n```js\nvar dag = require('breeze-dag');\n\ndag(edges, 2, function (e, next) {\n  setTimeout(function () {\n    next(); // or next(err);\n  }, 1000);\n}, function (err) {\n  // our done callback\n  should.not.exist(err);\n});\n```\n\nIf there are cyclical references in the set of edges, the `done`\ncallback will be immediately called with an error indicating\nthe problem.\n\nIf an error occurs the `done` callback will\nbe executed immediately. No more items will begin processing,\nbut items that have already started will run to completion.\n\n## License\n\n(The MIT License)\n\nCopyright (c) 2012 Jake Luer <jake@qualiancy.com> (http://qualiancy.com)\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE.\n",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/qualiancy/breeze-dag/issues"
  },
  "_id": "breeze-dag@0.1.0",
  "dist": {
    "shasum": "0bf53e6bd8722cb14308be8d3d05173c68a4750a"
  },
  "_from": "breeze-dag@^0.1.0",
  "_resolved": "https://registry.npmjs.org/breeze-dag/-/breeze-dag-0.1.0.tgz"
}
